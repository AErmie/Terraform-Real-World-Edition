trigger: none
  # branches:
  #   include:
  #     - master
  # paths:
  #   include:
  #     - /Terraform/Networking/Spoke-Prod/Spoke-Prod.tf
  #     - /Terraform/Networking/Spoke-Prod/variables.tf
  #     - /Terraform/Networking/Spoke-Prod/outputs.tf
  #     - /Terraform/Networking/Deployments/Network-Deployment/Spoke-Deploy/SpokeDeploy.tf
  #     - /Terraform/Networking/Deployments/Network-Deployment/Spoke-Deploy/variables.tf
  #     - /Terraform/Networking/Deployments/Network-Deployment/Spoke-Deploy/Spoke.tfvars

resources:
  pipelines:
  - pipeline: "ADO-Terraform-IAC (Peer Deploy)"
    source: "ADO-Terraform-IAC (Spoke Deploy)"
    trigger: 
      branches:
      - master

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: Terraform Sensitive Variables
  - name: state_file
    value: deploy_peering.tfstate

steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: "Install Terraform"
    inputs:
      terraformVersion: '0.12.28'
  - script: terraform version
    displayName: "Terraform Version"
  - script:  az login --service-principal -u $(application_id) -p $(SPNPwd) --tenant $(tenant_id)
    displayName: "Log Into Azure"
  - script: terraform init -backend-config=resource_group_name=$(StorageResourceGroup) -backend-config="storage_account_name=$(StorageAccountName)" -backend-config="container_name=$(ContainerName)" -backend-config="access_key=$(SASKey)" -backend-config="key=$(StateFile)"
    displayName: "Terraform Init"
    workingDirectory: $(System.DefaultWorkingDirectory)/Networking/Deployments/Network-Deployment/Peering-Deploy
  - script: terraform plan -var="client_id=$(application_id)" -var="client_secret=$(SPNPwd)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var-file="Peering.tfvars" -out="PeeringDeploy.plan"
    displayName: "Terraform Plan"
    workingDirectory: $(System.DefaultWorkingDirectory)/Networking/Deployments/Network-Deployment/Peering-Deploy
  - script: terraform apply PeeringDeploy.plan
    displayName: "Terraform Apply"
    workingDirectory: $(System.DefaultWorkingDirectory)/Networking/Deployments/Network-Deployment/Peering-Deploy